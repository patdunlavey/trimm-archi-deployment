{"data":{"id":"adf12524-11ca-4925-bc23-d028556e75ac","attributes":{"langcode":"und","name":"IIIF Presentation API 3 Thumbnail","mimetype":"text\/text","twig":"{# \nThis Template generates Thumbnails for various Media representations\nUpdated 31\/10\/2023 for 1.3.0 \n\nStructures passed from Archipelago are\n- node\n  The full Node entitya\n- data\n  The Full JSON Structure converted in an Array\n- iiif_server\n  The publicly available IIIF Server (Global Setting)\n\nSince JSON was decoded into the 'data' values are valid PHP but could not\nbe valid JSON when outputting. So We use data.description|json_encode|raw\nWithout Double quotes.\n#}\n{# <---- SETUP ---> #}\n{# -- The Desired width -- #}\n{% set width = 240 %}\n{# -- The IIIF Server URLS -- #}\n{% set Webserverurl =  url('<front>')|render|replace({':8001\/':''}) ~ ':8183\/iiif\/2\/' %}\n{% set IIIFserverurl = iiif_server ? iiif_server ~ '\/': Webserverurl %}\n{# -- Node Info -- #}\n{% if node.id %}\n  {% set nodeurl = url('entity.node.canonical', {'node': node.id}, {'absolute': true}) %}\n{% else %}\n  {% set nodeurl = '<current>' ~ '\/iiif\/manifest' %}\n{% endif%}\n{# -- Language -- #}\n{% set len = language.getId() ? language.getId() : \"en\" %}\n{# --THIS WILL BE THE IMAGE IIIF URL. CAN HAVE A DEFAULT VALUE IN CASE OF FAILURE THERE IS ALWAYS A GENERIC THUMB-- #}\n{# -- NOTE: for loops are scoped so if we onlt define source inside one it will not be accesible from the outside- #}\n{% set source = '' %}\n{# <---- END SETUP --> #}\n{#  We will test for 3 main options\n1.- Images\n2.- PDF\n3.- Movies\n#}\n{% apply spaceless %}    \n{% if attribute(data, 'as:image')|length > 0 %}  \n  {% set document  = data['as:image']|first %} \n  {# if the default size is smaller than the source use the source one #}\n  {% if document['flv:exif'].ImageWidth is defined and document['flv:exif'].ImageWidth < width %}\n     {% set width = document['flv:exif'].ImageWidth %} \n  {% endif %}\n  {% set cantaloupeid  = IIIFserverurl ~ document['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode %}\n  {% set source = cantaloupeid ~ \"\/full\/\" ~ width  ~ \",\/0\/default.jpg\" %}\n{% elseif attribute(data, 'as:document')|length > 0 %}\n  {% set break = false %}\n  {% for document in data['as:document'] %}\n    {% if not break %}\n  {# this is just an example, we  allow every PDF here but we can also filter by pronom id \"info:pronom\/fmt\/17\" or info:pronom\/fmt\/18 #}\n      {% if document['flv:exif'].MIMEType == \"application\/pdf\" and document['flv:exif'].PageCount > 0 %}   \n        {% set cantaloupeid  = IIIFserverurl ~ document['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode %} \n        {% set source = cantaloupeid ~ \";1\/full\/\" ~ width  ~ \",\/0\/default.jpg\" %}\n        {% set break = true %}\n      {% endif%}\n    {% endif%}\n  {% endfor %}\n{% elseif attribute(data, 'as:video')|length > 0 %}  \n  {% set break = false %}\n  {% for document in data['as:video'] %}\n    {% if not break %}\n  {# this is just an example, we process here only MP4 quicktimes #}\n      {% if document['flv:pronom'].mimetype == \"video\/quicktime\" %}\n        {% set cantaloupeid  = IIIFserverurl ~ document['url']|replace({'s3:\/\/':''})|replace({'private:\/\/':''})|url_encode %} \n        {% set source = cantaloupeid ~ \";1\/full\/\" ~ width  ~ \",\/0\/default.jpg\" %}\n        {% set break = true %}\n      {% endif %}\n    {% endif %}\n  {% endfor %}  \n{% endif%}\n{% if source|length > 0 %}\n  {% set thumb_width = width < max_thumb_width ? width: max_thumb_width %}\n  {% set thumb_height = (thumb_width\/width * height)|round() %}\n\"thumbnail\": [{\n  \"id\": \"{{ source }}\",\n  \"type\": \"Image\",\n  \"format\": \"image\/jpeg\",\n  \"width\": {{ width }},\n  \"height\": 180\n}]\n{% else %}\n\"thumbnail\": \n[{\n  \"id\": \"{{ url('<front>')|render ~ file_url('public:\/\/media-icons\/generic\/no-thumbnail.png') }}\",\n  \"type\": \"Image\",\n  \"format\": \"image\/png\",\n  \"width\": 180,\n  \"height\": 180\n}]\n{% endif %}\n{% endapply %}"},"type":"metadatadisplay_entity--metadatadisplay_entity"}}